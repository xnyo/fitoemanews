swagger: '2.0'
info:
  version: 1.0.0
  title: EmaNews API
host: '172.16.10.100'
basePath: /api/v1
tags:
  - name: private
    description: Handler per operazioni effettuate dal frontend
  - name: public
    description: Handler per operazioni sui dati offertndex.html#/i dall'EMA
  - name: protected
    description: Handler che richiedono il login
  - name: guests
    description: Handler accessibili solo agli ospiti
schemes:
  - http
  - https
paths:
  /ping:
    get:
      tags:
        - private
      summary: Verifica se l'api è online
      operationId: ping
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: L'API è online
          schema:
            type: object
            properties:
              message:
                type: string
                default: ok
        '405':
          description: Metodo non valido
  '/activate/{token}':
    post:
      produces:
        - application/json
      tags:
        - private
        - guests
      summary: Attiva un account appena registrato
      responses:
        '200':
          $ref: '#/responses/Ok'
        '404':
          description: Token di attivazione non trovato
          schema:
            type: object
            properties:
              status:
                type: string
                default: '404'
              message:
                type: string
                description: Token di attivazione non valido
        '405':
          $ref: '#/responses/MethodNotAllowed'
      parameters:
        - name: token
          in: path
          required: true
          type: string
          format: Token di attivazione dell'account
  /herbs:
    get:
      produces:
        - application/json
      tags:
        - public
        - protected
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      summary: Ricerca erbe
      responses:
        '200':
          description: Risultati ricerca
          schema:
            type: array
            items:
              $ref: '#/definitions/Herb'
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
      parameters:
        - name: query
          in: query
          type: string
          description: >-
            Filtro per nome. Può essere inserito una parte di un nome latino,
            botanico o inglese.
        - name: fetch_documents
          in: query
          type: boolean
          description: >-
            Se `true`, vengono ritornati insieme alle erbe anche i relativi
            documenti nell'attributo `documents` di ogni erba, altrimenti
            vengono ritornate solo le erbe.
        - name: limit
          in: query
          type: number
          description: >-
            Numero massimo di risultati da ritornate. Usare 0 per disattivare il
            limite e ritornare tutti i risultati.
        - name: page
          in: query
          type: number
          description: >-
            Da usare insieme a `limit` per implementare la paginazione dei
            risultati. Il numero delle pagine parte da 0.
        - name: order_by
          in: query
          type: string
          enum:
            - latin_name
            - botanic_name
            - english_name
            - status
            - latest_update
          description: Parametro di ordinamento dei risultati.
        - name: direction
          in: query
          type: string
          enum:
            - asc
            - desc
          description: Ordinamento crescente o decrescente.
      operationId: searchHerbs
      consumes:
        - application/json
  /api_keys:
    get:
      produces:
        - application/json
      tags:
        - private
        - protected
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      summary: Elenca le API Key dell'account
      operationId: listApiKeys
      responses:
        '200':
          description: Lista delle API key
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: la mia api key
                  description: ''
        '400':
          $ref: '#/responses/InvalidArgumentsError'
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
    post:
      produces:
        - application/json
      tags:
        - private
      security:
        - API Key: []
        - API Key Header: []
      summary: Crea una nuova API key
      operationId: newApiKey
      responses:
        '200':
          description: API Key creata
          schema:
            type: object
            properties:
              message:
                type: string
                default: ok
              key:
                type: string
                description: API Key in chiaro. Non verrà mai più mostrata.
                example: lsSBBzlRIUlMbnPYcZfrD16VRc8cbw8a
        '400':
          $ref: '#/responses/InvalidArgumentsError'
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
      parameters:
        - in: body
          name: api_key_data
          required: true
          schema:
            type: object
            properties:
              key:
                type: string
                description: 'Nome dell''API Key, scelto dall''utente'
                example: prova
  '/api_keys/{id}':
    delete:
      responses:
        '200':
          $ref: '#/responses/Ok'
        '400':
          $ref: '#/responses/InvalidArgumentsError'
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
      produces:
        - application/json
      tags:
        - private
        - protected
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      summary: Elimina una API Key associata a questo account
      operationId: deleteApiKey
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID dell'API Key da eliminare
      description: >-
        Elimina una API Key. L'API key da eliminare deve essere collegata
        all'account in questione. In caso contrario, verrà sempre ritornato un
        messaggio affermativo (status code 200), ma la key non verrà eliminata.
  /login:
    post:
      produces:
        - application/json
      tags:
        - private
        - guests
      summary: Effettua il login
      operationId: login
      responses:
        '200':
          description: >-
            Login effettuato con successo. Verrà impostato il cookie `session`
            dal server.
          schema:
            type: object
            properties:
              message:
                type: string
                default: ok
        '400':
          $ref: '#/responses/InvalidArgumentsError'
        '403':
          description: Accesso negato (password errata o account non ancora attivo)
          schema:
            type: object
            properties:
              status:
                type: integer
                default: '403'
              message:
                type: string
                default: La password inserita è errata
        '404':
          description: Email inesistente
          schema:
            type: object
            properties:
              status:
                type: integer
                default: '404'
              message:
                type: string
                default: L'indirizzo email inserito non è associato a nessun account
        '405':
          $ref: '#/responses/MethodNotAllowed'
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: mario@rossi.com
                description: Indirizzo email dell'utente
              password:
                type: string
                example: aWxzdXNsZWFrQA
                description: Password (in chiaro)
      description: >-
        Effettua il login. **La connessione dovrebbe avvenire in HTTPs, poichè
        la password viene trasmessa in chiaro.**
      schemes:
        - https
      consumes:
        - application/json
  /logout:
    post:
      tags:
        - private
        - protected
      summary: Effettua il logout
      description: Effettua il logout
      operationId: logout
      responses:
        '200':
          description: >-
            Logout avvenuto con successo. Il cookie `session` verrà resettato
            dal server.
          schema:
            type: object
            properties:
              status:
                type: integer
                default: '200'
              message:
                type: string
                default: ok
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
        '406':
          description: L'autenticazione non è avvenuta con il cookie `session`
          schema:
            type: object
            properties:
              status:
                type: integer
                default: '406'
              message:
                type: string
                default: Can't logout.
      produces:
        - application/json
      security:
        - Cookie di sessione: []
  /zxcvbn:
    get:
      produces:
        - application/json
      tags:
        - private
      summary: Calcola la complessità di una password
      operationId: zxcvbn
      responses:
        '200':
          description: Complessità password
          schema:
            type: object
            properties:
              strength:
                type: integer
                example: '4'
                description: Da 0 (per niente sicura) a 100 (molto sicura)
                format: ''
        '400':
          $ref: '#/responses/InvalidArgumentsError'
        '405':
          $ref: '#/responses/MethodNotAllowed'
      parameters:
        - name: input
          in: query
          type: string
          description: Password
  /user:
    post:
      produces:
        - application/json
      tags:
        - private
        - guests
      summary: Registra un nuovo utente
      operationId: signUp
      responses:
        '200':
          $ref: '#/responses/Ok'
        '400':
          $ref: '#/responses/InvalidArgumentsError'
        '403':
          $ref: '#/responses/AlreadyLoggedInError'
        '405':
          $ref: '#/responses/MethodNotAllowed'
        '409':
          description: Esiste già un altro utente registrato con questo indirizzo email
          schema:
            type: object
            properties:
              status:
                type: integer
                default: '409'
              message:
                type: string
                default: >-
                  Esiste già un altro utente registrato con questo indirizzo
                  email
      parameters:
        - name: user_data
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Nome dell'utente. Tra i 2 e i 64 caratteri (compresi)
                example: Mario
              surname:
                type: string
                example: Rossi
                description: Cognome dell'utente. Tra i 2 e i 64 caratteri (compresi)
              email:
                type: string
                example: mario@rossi.com
                description: Indirizzo email dell'utente
              password:
                type: string
                example: aWxzdXNsZWFrQA
                description: Password dell'utente (in chiuaro)
            required:
              - password
              - email
              - surname
              - name
      schemes:
        - https
      description: >-
        Registra un nuovo utente. **La connessione dovrebbe avvenire in HTTPs,
        poichè la password viene trasmessa in chiaro.**
    get:
      produces:
        - application/json
      tags:
        - private
        - protected
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      summary: Ritorna le informazioni dell'utente attuale
      responses:
        '200':
          description: Informazioni dell'utente loggato
          schema:
            type: object
            properties:
              id:
                type: number
                example: '1'
              name:
                type: string
                example: Mario
              surname:
                type: string
                example: Rossi
              privileges:
                type: number
                default: '2'
              gravatar_hash:
                type: string
                description: >-
                  Hash email per gravatar [(docs
                  gravatar)](http://en.gravatar.com/site/implement/hash/)
                example: f12d0c1b13deed7f85761a68f30a6439
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
  /notification_settings:
    get:
      produces:
        - application/json
      tags:
        - private
        - protected
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      summary: Ritorna le impostazioni delle notifiche dell'utente attualmente loggato
      operationId: getNotificationSettings
      responses:
        '200':
          description: Impostazioni notifiche
          schema:
            type: object
            properties:
              when:
                type: array
                items:
                  $ref: '#/definitions/NotificationWhen'
              by:
                type: array
                items:
                  $ref: '#/definitions/NotificationBy'
              telegram_linked:
                type: boolean
                description: >-
                  Se è `true`, l'account EmaNews è collegato ad un account
                  Telegram (le notifiche via Telegram potrebbero comunque non
                  essere attivate)
                example: trye
              herbs:
                type: array
                description: >-
                  Può essere un array di interi o un booleano.

                  - Se è `true`, tiene traccia degli aggiornamenti a tutte le
                  erbe e a tutti i documenti.

                  - Se è un array di interi, tiene traccia degli aggiornamenti
                  alle erbe i cui ID sono contenuti in questo array e ai
                  relativi documenti. Questo parametro riguarda solo
                  l'aggiornamento di erbe e documenti esistenti e non andrà a
                  filtrare le notifiche relative all'inserimento di nuove erbe.
                items:
                  type: integer
                  example: '15'
                  default: ''
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - protected
        - private
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      summary: Modifica le impostazioni delle notifiche per l'utente loggato
      operationId: setNotificationSettings
      responses:
        '200':
          $ref: '#/responses/Ok'
        '400':
          $ref: '#/responses/InvalidArgumentsError'
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
      parameters:
        - name: new_settings
          in: body
          description: >-
            Nuove impostazioni. Verranno cambiate solo le impostazioni relative
            agli attributi presenti.
          schema:
            type: object
            properties:
              when:
                $ref: '#/definitions/NotificationWhen'
              by:
                $ref: '#/definitions/NotificationBy'
              herbs:
                type: array
                items:
                  type: integer
                  example: '13'
                description: >-
                  `true` (ricevi notifiche per tutte le erbe) o array di id di
                  erbe per cui ricevere le notifiche
  /telegram:
    get:
      produces:
        - application/json
      tags:
        - private
        - protected
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      description: >-
        Ritorna il link per collegare l'account EmaNews con l'account Telegram
        (deep link) per collegare l'account EmaNews con un account Telegram.  

        Il link ha formato: `https://telegram.me/USERNAME_BOT?start=TOKEN`.  

        Il token è lungo 16 caratteri ed ha una durata di 60 minuti, scaduti i
        quali viene generato un nuovo token quando si chiama nuovamente questo
        handler.  

        L'utente dovrà cliccare sul link, aprire Telegram e cliccare su
        "Start".  

        _[Maggiori informazioni sul deep linking sono riportate nella
        documentazione di
        Telegram](https://core.telegram.org/bots#deep-linking)._
      operationId: getTelegramToken
      responses:
        '200':
          description: Deep link telegram
          schema:
            type: object
            properties:
              telegram_link:
                type: string
                example: 'https://telegram.me/EmaNewsBot?start=aW1lbWljb2xvcFif'
                description: Link per collegare l'account EmaNews con un account Telegram.
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
        '406':
          description: >-
            L'account EmaNews dell'utente attualmente loggato è già collegato a
            Telegram
          schema:
            type: object
            properties:
              status:
                type: number
                default: ''
                example: '406'
              message:
                type: string
                example: Account già collegato con Telegram
    delete:
      produces:
        - application/json
      tags:
        - private
        - protected
      security:
        - API Key: []
        - API Key Header: []
        - Cookie di sessione: []
      summary: Scollega l'account EmaNews dell'utente loggato da Telegram
      description: >-
        Scollega l'account EmaNews dell'utente loggato da Telegram. Questo
        handler ritorna sempre una risposta positiva, anche se l'account
        dell'utente loggato non è collegato a Telegram.
      responses:
        '200':
          $ref: '#/responses/Ok'
        '401':
          $ref: '#/responses/NotAuthenticated'
        '405':
          $ref: '#/responses/MethodNotAllowed'
definitions:
  Herb:
    type: object
    properties:
      id:
        type: integer
        format: int32
      latin_name:
        type: string
      botanic_name:
        type: string
      english_name:
        type: string
      status:
        $ref: '#/definitions/HerbStatus'
      url:
        type: string
      latest_update:
        type: integer
        format: int64
        description: >-
          UNIX timestamp dell'istante in cui è stato rilevato un aggiornamento
          sullo stato dell'erba o su un documento relativo a questa erba.
      documents:
        $ref: '#/definitions/Document'
  Document:
    type: object
    properties:
      id:
        type: integer
        format: int32
      type:
        $ref: '#/definitions/DocumentType'
      name:
        type: string
      language:
        type: string
      first_published:
        type: string
      last_updated_ema:
        type: integer
        format: int64
        description: >-
          UNIX timestamp dell'istante in cui è stato rilevato un aggiornamento
          su questo documento.
      url:
        type: string
        description: URL diretto al file PDF di questo documento
  HerbStatus:
    type: string
    enum:
      - R
      - C
      - D
      - P
      - PF
      - F
    description: |
      Tipo di erba:
      * `R` - Rapporteur assigned
      * `C` - Ongoing call for scientific data
      * `D` - Draft under discussion
      * `P` - Draft published
      * `PF` - Assessment close to finalisation (pre-final)
      * `F` - Final opinion adopted
  NotificationWhen:
    type: string
    enum:
      - NEW_MEDICINE
      - MEDICINE_UPDATE
      - NEW_DOCUMENT
      - DOCUMENT_UPDATE
    description: |
      Quando ricevere gli aggiornamenti:
      * `NEW_MEDICINE` - Una nuova medicina è stata inserita
      * `MEDICINE_UPDATE` - Una medicina esistente è stata aggiornata
      * `NEW_DOCUMENT` - Un nuovo documento è stato inserito
      * `DOCUMENT_UPDATE` - Un documento esistente è stato aggiornato
  NotificationBy:
    type: string
    enum:
      - EMAIL
      - TELEGRAM
    description: >
      Come ricevere gli aggiornamenti:

      * `EMAIL` - Per email

      * `MEDICINE_UPDATE` - Via Telegram (necessario collegamento account
      EmaNews-Telegram)
  DocumentType:
    type: string
    enum:
      - consultation
      - other
responses:
  Ok:
    description: Richiesta elaborata con successo
    schema:
      type: object
      properties:
        message:
          type: string
          default: ''
          example: ok
  MethodNotAllowed:
    description: Il metodo HTTP utilizzato non è supportato da questo handler
    schema:
      type: string
      default: ''
      example: '405: Method Not Allowed'
  NotAuthenticated:
    description: È necessario autenticarsi per utilizzare questo handler
    schema:
      type: object
      properties:
        status:
          type: number
          default: ''
          example: '401'
        message:
          type: string
          default: ''
          example: not authenticated
  InvalidArgumentsError:
    description: Alcuni parametri non sono validi o mancano dei parametri obbligatori.
    schema:
      type: object
      properties:
        status:
          type: integer
          default: ''
          example: '400'
        message:
          type: string
          default: ''
          example: Some arguments are not valid
  AlreadyLoggedInError:
    description: >-
      Metodo accessibile solo dagli ospiti, ma è presente una API Key o un
      cookie di sessione nella richiesta.
    schema:
      type: object
      properties:
        status:
          type: integer
          default: ''
          example: '403'
        message:
          type: string
          default: ''
          example: You are already logged in
securityDefinitions:
  API Key:
    type: apiKey
    description: API Key
    name: apikey
    in: query
  API Key Header:
    type: apiKey
    description: API Key
    name: X-EmaNews-Token
    in: header
  Cookie di sessione:
    type: basic
    description: Cookie di sessione
